{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\nconst FormItem = Form.Item;\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n});\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          console.log(this.props.error); //this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Invalid Username or password\");\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, errorMessage, this.props.loading ? React.createElement(Spin, {\n        indicator: antIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }) : React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Login\"), \"Or\", React.createElement(NavLink, {\n        style: {\n          marginRight: '10px'\n        },\n        to: \"/signup/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" signup\"))));\n    }\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Login.js"],"names":["React","Form","Icon","Input","Button","Spin","connect","NavLink","Redirect","actions","FormItem","Item","antIcon","fontSize","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","console","log","error","render","errorMessage","getFieldDecorator","isAuthenticated","loading","rules","required","message","color","marginRight","WrappedNormalLoginForm","create","mapStateToProps","state","token","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        console.log(this.props.error)\n        //this.props.history.push('/');\n      }\n    });\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p color=\"red\">Invalid Username or password</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n     if (this.props.isAuthenticated) {\n      return (<Redirect to=\"/\" />);\n    }else{\n        return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                    <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        Login\n                    </Button>\n                    Or \n                    <NavLink \n                        style={{marginRight: '10px'}} \n                        to='/signup/'> signup\n                    </NavLink>\n                    </FormItem>\n                </Form>\n            }\n      </div>\n    );}\n    \n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}