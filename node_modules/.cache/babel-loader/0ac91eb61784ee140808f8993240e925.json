{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/upload/CSCI4140-Cheerapp/src/containers/ChatHolder.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"../routes\";\nimport Sidepanel from \"../containers/Sidepanel\";\nimport Profile from \"../containers/Profile\";\nimport Chat from \"../containers/Chat\";\nimport AddChatModal from \"../containers/Popup\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport WebSocketInstance from \"../websocket\";\n\nclass ChatHolder extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n    console.log(\"Params\");\n    console.log(this.props.match);\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(this.props.setMessages.bind(this), this.props.addMessage.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Sidepanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(AddChatModal, {\n      isVisible: this.props.showAddChatPopup,\n      close: () => this.props.closeAddChatPopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Profile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatHolder);","map":{"version":3,"sources":["/root/Desktop/django-apps/upload/CSCI4140-Cheerapp/src/containers/ChatHolder.js"],"names":["React","connect","BrowserRouter","Router","BaseRouter","Sidepanel","Profile","Chat","AddChatModal","actions","navActions","messageActions","WebSocketInstance","ChatHolder","Component","componentDidMount","props","onTryAutoSignup","console","log","match","constructor","addCallbacks","setMessages","bind","addMessage","render","showAddChatPopup","closeAddChatPopup","mapStateToProps","state","nav","authenticated","auth","token","mapDispatchToProps","dispatch","authCheckState","message","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AACA,OAAO,KAAKC,cAAZ,MAAgC,0BAAhC;AACA,OAAOC,iBAAP,MAA8B,cAA9B;;AAGA,MAAMC,UAAN,SAAyBb,KAAK,CAACc,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAElB,SAAKC,KAAL,CAAWC,eAAX;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,KAAvB;AACD;;AAEDC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAJ,IAAAA,iBAAiB,CAACU,YAAlB,CACE,KAAKN,KAAL,CAAWO,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,CADF,EAEE,KAAKR,KAAL,CAAWS,UAAX,CAAsBD,IAAtB,CAA2B,IAA3B,CAFF;AAID;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWW,gBADxB;AAEE,MAAA,KAAK,EAAE,MAAM,KAAKX,KAAL,CAAWY,iBAAX,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CAFF,CADJ;AAYD;;AA9BsC;;AAiCzC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,gBAAgB,EAAEG,KAAK,CAACC,GAAN,CAAUJ,gBADvB;AAELK,IAAAA,aAAa,EAAEF,KAAK,CAACG,IAAN,CAAWC;AAFrB,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,eAAe,EAAE,MAAMmB,QAAQ,CAAC3B,OAAO,CAAC4B,cAAR,EAAD,CAD1B;AAELT,IAAAA,iBAAiB,EAAE,MAAMQ,QAAQ,CAAC1B,UAAU,CAACkB,iBAAX,EAAD,CAF5B;AAGLH,IAAAA,UAAU,EAAEa,OAAO,IAAIF,QAAQ,CAACzB,cAAc,CAACc,UAAf,CAA0Ba,OAA1B,CAAD,CAH1B;AAILf,IAAAA,WAAW,EAAEgB,QAAQ,IAAIH,QAAQ,CAACzB,cAAc,CAACY,WAAf,CAA2BgB,QAA3B,CAAD;AAJ5B,GAAP;AAMD,CAPD;;AASA,eAAetC,OAAO,CACpB4B,eADoB,EAEpBM,kBAFoB,CAAP,CAGbtB,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"../routes\";\nimport Sidepanel from \"../containers/Sidepanel\";\nimport Profile from \"../containers/Profile\";\nimport Chat from \"../containers/Chat\";\nimport AddChatModal from \"../containers/Popup\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport WebSocketInstance from \"../websocket\";\n\n\nclass ChatHolder extends React.Component {\n  componentDidMount() {\n\n    this.props.onTryAutoSignup();\n\n    console.log(\"Params\");\n    console.log(this.props.match);\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n\n  render() {\n    return (\n        <div id=\"frame\">\n          <Sidepanel />\n          <div className=\"content\">\n            <AddChatModal\n              isVisible={this.props.showAddChatPopup}\n              close={() => this.props.closeAddChatPopup()}\n            />\n          <Profile />\n          </div>\n          </div>   \n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatHolder);"]},"metadata":{},"sourceType":"module"}