{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nconst FormItem = Form.Item;\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.login(values.userName, values.password); //this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function () {\n      if (component.props.token !== null && component.props.token !== undefined) {\n        component.props.getUserChats(component.props.username, component.props.token);\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Invalid username or password!\");\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, errorMessage, this.props.loading ? React.createElement(Spin, {\n        indicator: antIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login\"), \"Or\", React.createElement(NavLink, {\n        style: {\n          marginRight: '10px'\n        },\n        to: \"/signup/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" signup\"))));\n    }\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) => dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Login.js"],"names":["React","Form","Icon","Input","Button","Spin","connect","NavLink","Redirect","actions","navActions","messageActions","FormItem","Item","antIcon","fontSize","NormalLoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","login","userName","password","waitForAuthDetails","component","setTimeout","token","undefined","getUserChats","username","console","log","componentDidMount","render","errorMessage","error","getFieldDecorator","isAuthenticated","loading","rules","required","message","color","marginRight","WrappedNormalLoginForm","create","mapStateToProps","state","auth","chats","mapDispatchToProps","dispatch","authLogin","logout","signup","email","password1","password2","authSignup","addChat","openAddChatPopup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\n\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.login(values.userName, values.password);\n        //this.props.history.push('/');\n      }\n    });\n  }\n   waitForAuthDetails() {\n    const component = this;\n    setTimeout(function() {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p class=\"error\"> Invalid username or password!</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    if(this.props.isAuthenticated){\n      return(<Redirect to=\"/\"/>);  \n    }else{\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                    <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        Login\n                    </Button>\n                    Or \n                    <NavLink \n                        style={{marginRight: '10px'}} \n                        to='/signup/'> signup\n                    </NavLink>\n                    </FormItem>\n                </Form>\n            }\n      </div>\n    );\n}\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}