{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Signup.js\";\nimport React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport { Redirect } from \"react-router-dom\";\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.signup(values.userName, values.email, values.password, values.confirm);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function () {\n      if (component.props.token !== null && component.props.token !== undefined) {\n        component.props.getUserChats(component.props.username, component.props.token);\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" Your password can't be too similar to your other personal information.\"), React.createElement(\"p\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Your password must contain at least 8 characters.\"), React.createElement(\"p\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Your password can't be entirely numeric.\"));\n    }\n\n    if (this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, errorMessage, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Signup\"), \"Or\", React.createElement(NavLink, {\n        style: {\n          marginRight: '10px'\n        },\n        to: \"/login/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" login\")));\n    }\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) => dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","map":{"version":3,"sources":["/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Signup.js"],"names":["React","Form","Input","Icon","Button","connect","NavLink","actions","navActions","messageActions","Redirect","FormItem","Item","RegistrationForm","Component","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","signup","userName","email","password","confirm","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","waitForAuthDetails","component","setTimeout","token","undefined","getUserChats","username","console","log","componentDidMount","render","getFieldDecorator","errorMessage","error","isAuthenticated","rules","required","message","color","type","validator","marginRight","WrappedRegistrationForm","create","mapStateToProps","auth","loading","chats","mapDispatchToProps","dispatch","login","authLogin","logout","password1","password2","authSignup","addChat","openAddChatPopup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport { Redirect } from \"react-router-dom\";\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n   \n\n  waitForAuthDetails() {\n   const component = this;\n\n    setTimeout(function() {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.signup(\n            values.userName,\n            values.email,\n            values.password,\n            values.confirm\n        );\n       \n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n     let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n          <div>\n            <p class=\"error\"> Your password can't be too similar to your other personal information.</p>\n            <p class=\"error\">Your password must contain at least 8 characters.</p>\n            <p class=\"error\">Your password can't be entirely numeric.</p>\n           </div>\n        );\n    }\n    if(this.props.isAuthenticated){\n      return(<Redirect to=\"/\"/>);  \n    }else{\n    return  (\n    \n      <Form onSubmit={this.handleSubmit}>\n        {errorMessage}\n        <FormItem>\n            {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n            )}\n        </FormItem>\n        \n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: 'Please input your password!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: 'Please confirm your password!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n          )}\n        </FormItem>\n\n        <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n            Signup\n        </Button>\n        Or \n        <NavLink \n            style={{marginRight: '10px'}} \n            to='/login/'> login\n        </NavLink>\n        </FormItem>\n\n      </Form>\n    );}\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);"]},"metadata":{},"sourceType":"module"}