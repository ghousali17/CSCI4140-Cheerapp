{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Sidepanel.js\";\nimport React from \"react\";\nimport { Spin, Icon } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\nimport \"../assets/style.css\";\nimport axios from \"axios\";\nimport { HOST_URL } from \"../settings\";\nimport { Redirect } from \"react-router-dom\";\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\n\nclass Sidepanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginForm: true\n    };\n\n    this.changeForm = () => {\n      this.setState({\n        loginForm: !this.state.loginForm\n      });\n    };\n\n    this.authenticate = e => {\n      e.preventDefault();\n\n      if (this.state.loginForm) {\n        this.props.login(e.target.username.value, e.target.password.value);\n      } else {\n        this.props.signup(e.target.username.value, e.target.email.value, e.target.password.value, e.target.password2.value);\n      }\n    };\n  }\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function () {\n      if (component.props.token !== null && component.props.token !== undefined) {\n        component.props.getUserChats(component.props.username, component.props.token);\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n\n  getMatches() {\n    console.log('Find matches!');\n    axios.get(\"\".concat(HOST_URL, \"/profile/matches/?username=\").concat(this.props.username)).then(res => {\n      window.location.reload();\n    });\n  }\n\n  render() {\n    let activeChats = this.props.chats.map(c => {\n      return React.createElement(Contact, {\n        key: c.id,\n        name: c.participants[0] == this.props.username ? c.participants[1] : c.participants[0],\n        picURL: \"http://emilcarlsson.se/assets/louislitt.png\",\n        status: \"busy\",\n        chatURL: \"/chat/\".concat(c.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    });\n\n    if (!this.props.isAuthenticated) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        id: \"sidepanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"profile-img\",\n        src: \"http://emilcarlsson.se/assets/mikeross.png\",\n        className: \"online\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.props.username))), React.createElement(\"div\", {\n        id: \"contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, activeChats)), React.createElement(\"div\", {\n        id: \"bottom-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"addChat\",\n        onClick: () => this.openAddChatPopup(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user-plus fa-fw\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Create chat\")), React.createElement(\"button\", {\n        id: \"addChat\",\n        onClick: () => this.getMatches(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user-plus fa-fw\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Find matches\"))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) => dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);","map":{"version":3,"sources":["/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Sidepanel.js"],"names":["React","Spin","Icon","connect","actions","navActions","messageActions","Contact","axios","HOST_URL","Redirect","antIcon","fontSize","Sidepanel","Component","state","loginForm","changeForm","setState","authenticate","e","preventDefault","props","login","target","username","value","password","signup","email","password2","waitForAuthDetails","component","setTimeout","token","undefined","getUserChats","console","log","componentDidMount","openAddChatPopup","addChat","getMatches","get","then","res","window","location","reload","render","activeChats","chats","map","c","id","participants","isAuthenticated","mapStateToProps","auth","loading","message","mapDispatchToProps","dispatch","userName","authLogin","logout","password1","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Spin, Icon } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\nimport \"../assets/style.css\";\nimport axios from \"axios\";\nimport { HOST_URL } from \"../settings\";\nimport { Redirect } from \"react-router-dom\";\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Sidepanel extends React.Component {\n  state = {\n    loginForm: true\n  };\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function() {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n  \n  getMatches(){\n    console.log('Find matches!');\n    axios.get(`${HOST_URL}/profile/matches/?username=${this.props.username}`).then(res=>{\n      window.location.reload();\n    });\n      \n  }\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = e => {\n    e.preventDefault();\n    if (this.state.loginForm) {\n      this.props.login(e.target.username.value, e.target.password.value);\n    } else {\n      this.props.signup(\n        e.target.username.value,\n        e.target.email.value,\n        e.target.password.value,\n        e.target.password2.value\n      );\n    }\n  };\n\n  render() {\n    let activeChats = this.props.chats.map(c => {\n\n      return (\n        <Contact\n          key={c.id}\n          name={ c.participants[0] == this.props.username ? c.participants[1] : c.participants[0] }\n          picURL=\"http://emilcarlsson.se/assets/louislitt.png\"\n          status=\"busy\"\n          chatURL={`/chat/${c.id}`}\n        />\n      );\n    });\n    if (!this.props.isAuthenticated){\n    return(<Redirect to=\"/\"/>);  \n    }else{\n    return (\n      <div id=\"sidepanel\">\n        <div id=\"profile\">\n          <div className=\"wrap\">\n            <img\n              id=\"profile-img\"\n              src=\"http://emilcarlsson.se/assets/mikeross.png\"\n              className=\"online\"\n              alt=\"\"\n            />\n            <p>{this.props.username}</p>   \n          </div>\n        </div>\n      \n        <div id=\"contacts\">\n          <ul>{activeChats}</ul>\n        </div>\n        <div id=\"bottom-bar\">\n          <button id=\"addChat\" onClick={() => this.openAddChatPopup()}>\n            <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\" />\n            <span>Create chat</span>\n          </button>\n          <button id=\"addChat\" onClick={() => this.getMatches()}>\n            <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\" />\n            <span>Find matches</span>\n          </button>\n        \n        </div>\n      </div>\n    );}\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidepanel);"]},"metadata":{},"sourceType":"module"}