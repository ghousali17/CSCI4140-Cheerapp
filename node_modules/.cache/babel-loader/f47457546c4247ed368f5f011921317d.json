{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Sidepanel.js\";\nimport React from \"react\";\nimport { Spin, Icon } from \"antd\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\n\nclass Sidepanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginForm: true\n    };\n\n    this.changeForm = () => {\n      this.setState({\n        loginForm: !this.state.loginForm\n      });\n    };\n\n    this.authenticate = e => {\n      e.preventDefault();\n\n      if (this.state.loginForm) {\n        this.props.login(e.target.username.value, e.target.password.value);\n      } else {\n        this.props.signup(e.target.username.value, e.target.email.value, e.target.password.value, e.target.password2.value);\n      }\n    };\n  }\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function () {\n      if (component.props.token !== null && component.props.token !== undefined) {\n        component.props.getUserChats(component.props.username, component.props.token);\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n\n  render() {\n    let activeChats = this.props.chats.map(c => {\n      return React.createElement(Contact, {\n        key: c.id,\n        name: \"Harvey Specter\",\n        picURL: \"http://emilcarlsson.se/assets/louislitt.png\",\n        status: \"busy\",\n        chatURL: \"/\".concat(c.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"sidepanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"profile-img\",\n      src: \"http://emilcarlsson.se/assets/mikeross.png\",\n      className: \"online\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"expanded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : this.props.isAuthenticated ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.userName) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Contacts\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, activeChats)), React.createElement(\"div\", {\n      id: \"bottom-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"addChat\",\n      onClick: () => this.openAddChatPopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user-plus fa-fw\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Create chat\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) => dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);","map":{"version":3,"sources":["/root/Desktop/django-apps/final/CSCI4140-Cheerapp/src/containers/Sidepanel.js"],"names":["React","Spin","Icon","Redirect","connect","actions","navActions","messageActions","Contact","antIcon","fontSize","Sidepanel","Component","state","loginForm","changeForm","setState","authenticate","e","preventDefault","props","login","target","username","value","password","signup","email","password2","waitForAuthDetails","component","setTimeout","token","undefined","getUserChats","console","log","componentDidMount","openAddChatPopup","addChat","render","activeChats","chats","map","c","id","loading","isAuthenticated","userName","mapStateToProps","auth","message","mapDispatchToProps","dispatch","authLogin","logout","password1","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Spin, Icon } from \"antd\";\nimport {Redirect} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Sidepanel extends React.Component {\n  state = {\n    loginForm: true\n  };\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function() {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = e => {\n    e.preventDefault();\n    if (this.state.loginForm) {\n      this.props.login(e.target.username.value, e.target.password.value);\n    } else {\n      this.props.signup(\n        e.target.username.value,\n        e.target.email.value,\n        e.target.password.value,\n        e.target.password2.value\n      );\n    }\n  };\n\n  render() {\n    let activeChats = this.props.chats.map(c => {\n      return (\n        <Contact\n          key={c.id}\n          name=\"Harvey Specter\"\n          picURL=\"http://emilcarlsson.se/assets/louislitt.png\"\n          status=\"busy\"\n          chatURL={`/${c.id}`}\n        />\n      );\n    });\n    return (\n      <div id=\"sidepanel\">\n        <div id=\"profile\">\n          <div className=\"wrap\">\n            <img\n              id=\"profile-img\"\n              src=\"http://emilcarlsson.se/assets/mikeross.png\"\n              className=\"online\"\n              alt=\"\"\n            />\n          \n            <div id=\"expanded\">\n              {\n                this.props.loading ? (\n                <Spin indicator={antIcon} />\n              ) : this.props.isAuthenticated ? (\n\n              <h1>{this.props.userName}</h1>\n\n\n              ) \n\n\n\n\n                : (      <Redirect to=\"/\" />)\n            }\n\n            </div>\n          </div>\n        </div>\n        <div id=\"contacts\">\n        <h1> Contacts</h1>\n          <ul>{activeChats}</ul>\n        </div>\n        <div id=\"bottom-bar\">\n          <button id=\"addChat\" onClick={() => this.openAddChatPopup()}>\n            <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\" />\n            <span>Create chat</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidepanel);\n"]},"metadata":{},"sourceType":"module"}