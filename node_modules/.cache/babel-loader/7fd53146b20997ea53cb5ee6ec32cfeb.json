{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/django-apps/upload/CSCI4140-Cheerapp/src/containers/Chat.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\nimport Sidepanel from \"../containers/Sidepanel\";\nimport Profile from \"../containers/Profile\";\nimport AddChatModal from \"../containers/Popup\";\n\nclass Chat extends React.Component {\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      WebSocketInstance.fetchMessages(this.props.username, this.props.match.params.chatID);\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\"\n    };\n\n    this.messageChangeHandler = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.sendMessageHandler = e => {\n      e.preventDefault();\n      const messageObject = {\n        from: this.props.username,\n        content: this.state.message,\n        chatId: this.props.match.params.chatID\n      };\n      WebSocketInstance.newChatMessage(messageObject);\n      this.setState({\n        message: \"\"\n      });\n    };\n\n    this.renderTimestamp = timestamp => {\n      let prefix = \"\";\n      const timeDiff = Math.round((new Date().getTime() - new Date(timestamp).getTime()) / 60000);\n\n      if (timeDiff < 1) {\n        // less than one minute ago\n        prefix = \"just now...\";\n      } else if (timeDiff < 60 && timeDiff > 1) {\n        // less than sixty minutes ago\n        prefix = \"\".concat(timeDiff, \" minutes ago\");\n      } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n        // less than 24 hours ago\n        prefix = \"\".concat(Math.round(timeDiff / 60), \" hours ago\");\n      } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n        // less than 7 days ago\n        prefix = \"\".concat(Math.round(timeDiff / (60 * 24)), \" days ago\");\n      } else {\n        prefix = \"\".concat(new Date(timestamp));\n      }\n\n      return prefix;\n    };\n\n    this.renderMessages = messages => {\n      const currentUser = this.props.username;\n      return messages.map((message, i, arr) => React.createElement(\"li\", {\n        key: message.id,\n        style: {\n          marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\"\n        },\n        className: message.author === currentUser ? \"sent\" : \"replies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://emilcarlsson.se/assets/mikeross.png\",\n        alt: \"profile-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, message.content, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.renderTimestamp(message.timestamp)))));\n    };\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.initialiseChat();\n  }\n\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function () {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(this.props.username, newProps.match.params.chatID);\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Sidepanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(AddChatModal, {\n      isVisible: this.props.showAddChatPopup,\n      close: () => this.props.closeAddChatPopup(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Profile, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Hoc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"chat-log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.props.messages && this.renderMessages(this.props.messages), React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        clear: \"both\"\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"message-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.sendMessageHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.messageChangeHandler,\n      value: this.state.message,\n      required: true,\n      id: \"chat-message-input\",\n      type: \"text\",\n      placeholder: \"Write your message...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-paperclip attachment\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"chat-message-submit\",\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-paper-plane\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);","map":{"version":3,"sources":["/root/Desktop/django-apps/upload/CSCI4140-Cheerapp/src/containers/Chat.js"],"names":["React","connect","WebSocketInstance","Hoc","Sidepanel","Profile","AddChatModal","Chat","Component","initialiseChat","waitForSocketConnection","fetchMessages","props","username","match","params","chatID","constructor","state","message","messageChangeHandler","event","setState","target","value","sendMessageHandler","e","preventDefault","messageObject","from","content","chatId","newChatMessage","renderTimestamp","timestamp","prefix","timeDiff","Math","round","Date","getTime","renderMessages","messages","currentUser","map","i","arr","id","marginBottom","length","author","scrollToBottom","messagesEnd","scrollIntoView","behavior","callback","component","setTimeout","console","log","componentDidMount","componentDidUpdate","componentWillReceiveProps","newProps","disconnect","render","showAddChatPopup","closeAddChatPopup","float","clear","el","mapStateToProps","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\nimport Sidepanel from \"../containers/Sidepanel\";\nimport Profile from \"../containers/Profile\";\nimport AddChatModal from \"../containers/Popup\";\n\nclass Chat extends React.Component {\n  state = { message: \"\" };\n\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      WebSocketInstance.fetchMessages(\n        this.props.username,\n        this.props.match.params.chatID\n      );\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n\n  constructor(props) {\n    super(props);\n    this.initialiseChat();\n  }\n\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function() {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  messageChangeHandler = event => {\n    this.setState({ message: event.target.value });\n  };\n\n  sendMessageHandler = e => {\n    e.preventDefault();\n    const messageObject = {\n      from: this.props.username,\n      content: this.state.message,\n      chatId: this.props.match.params.chatID\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n    this.setState({ message: \"\" });\n  };\n\n  renderTimestamp = timestamp => {\n    let prefix = \"\";\n    const timeDiff = Math.round(\n      (new Date().getTime() - new Date(timestamp).getTime()) / 60000\n    );\n    if (timeDiff < 1) {\n      // less than one minute ago\n      prefix = \"just now...\";\n    } else if (timeDiff < 60 && timeDiff > 1) {\n      // less than sixty minutes ago\n      prefix = `${timeDiff} minutes ago`;\n    } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n      // less than 24 hours ago\n      prefix = `${Math.round(timeDiff / 60)} hours ago`;\n    } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n      // less than 7 days ago\n      prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n    } else {\n      prefix = `${new Date(timestamp)}`;\n    }\n    return prefix;\n  };\n\n  renderMessages = messages => {\n    const currentUser = this.props.username;\n    return messages.map((message, i, arr) => (\n      <li\n        key={message.id}\n        style={{ marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\" }}\n        className={message.author === currentUser ? \"sent\" : \"replies\"}\n      >\n        <img\n          src=\"http://emilcarlsson.se/assets/mikeross.png\"\n          alt=\"profile-pic\"\n        />\n        <p>\n          {message.content}\n          <br />\n          <small>{this.renderTimestamp(message.timestamp)}</small>\n        </p>\n      </li>\n    ));\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(\n          this.props.username,\n          newProps.match.params.chatID\n        );\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n\n  render() {\n    return (\n    <div id=\"frame\">\n     <Sidepanel />\n    <div className=\"content\">\n      <AddChatModal\n              isVisible={this.props.showAddChatPopup}\n              close={() => this.props.closeAddChatPopup()}\n            />\n      <Profile {...this.props} />\n      <Hoc>\n        <div className=\"messages\">\n          <ul id=\"chat-log\">\n            {this.props.messages && this.renderMessages(this.props.messages)}\n            <div\n              style={{ float: \"left\", clear: \"both\" }}\n              ref={el => {\n                this.messagesEnd = el;\n              }}\n            />\n          </ul>\n        </div>\n        <div className=\"message-input\">\n          <form onSubmit={this.sendMessageHandler}>\n            <div className=\"wrap\">\n              <input\n                onChange={this.messageChangeHandler}\n                value={this.state.message}\n                required\n                id=\"chat-message-input\"\n                type=\"text\"\n                placeholder=\"Write your message...\"\n              />\n              <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\" />\n              <button id=\"chat-message-submit\" className=\"submit\">\n                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </form>\n        </div>\n      </Hoc>\n      </div>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}